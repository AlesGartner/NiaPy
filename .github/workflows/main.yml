name: Check and Test

on: [pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    env:
      MPLBACKEND: "agg"
      DISABLE_COVERAGE: true
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Config git
      run: |
        git config --local user.email "$(git log --format='%ae' HEAD^!)"
        git config --local user.name "$(git log --format='%an' HEAD^!)"
        git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
        git pull github ${GITHUB_REF} --ff-only
    - name: Install pipenv
      run: |
        python3 -m pip install --upgrade pip
        pip install pipenv
    - name: Install dependencies
      run: |
        pipenv install --skip-lock --dev
    - name: Lint with flake8
      run: |
        pipenv run flake8 niapy tests scent.py setup.py
    - name: Check codestyle
      run: |
        pipenv run pycodestyle niapy tests scent.py setup.py --config=.pycodestyle.ini
    - name: Check docstyle
      run: |
        pipenv run pydocstyle niapy tests scent.py setup.py
    - name: Run incremental tests
      run: |
        pipenv run pytest --testmon -ra -vv --random --random-seed=32786 niapy tests
    - name: Add and commit updated .testmondata file
      run: |
        git add .testmondata
        git commit -m "Update .testmondata"
        git push github HEAD:${GITHUB_REF}
        
  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    env:
      MPLBACKEND: "agg"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
      run: |
        python3 -m pip install --upgrade pip
        pip install pipenv
    - name: Install dependencies
      run: |
        pipenv install --skip-lock --dev
    - name: Run all tests
      run: |
        pipenv run pytest -ra -vv --random --random-seed=32786 --cov=niapy --no-cov-on-fail --cov-report=term-missing:skip-covered --cov-report=html niapy tests --junitxml=xmlreport/overall.xml


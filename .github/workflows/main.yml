name: Check and Test

on: [pull_request]

jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    env:
      MPLBACKEND: "agg"
      DISABLE_COVERAGE: true
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: refs/heads/${{ github.head_ref }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
      run: |
        python3 -m pip install --upgrade pip
        pip install pipenv
    - name: Install dependencies
      run: |
        pipenv install --skip-lock --dev
    - name: Lint with flake8
      run: |
        pipenv run flake8 niapy tests scent.py setup.py
    - name: Check codestyle
      run: |
        pipenv run pycodestyle niapy tests scent.py setup.py --config=.pycodestyle.ini
    - name: Check docstyle
      run: |
        pipenv run pydocstyle niapy tests scent.py setup.py
    - name: Run incremental tests
      env:
        TESTMON_DATAFILE: config/testmondata/${{ matrix.os }}_py${{ matrix.python-version }}
      run: |
        echo "${TESTMON_DATAFILE}"
        status=$(pipenv run pytest --testmon -ra -vv --random --random-seed=32786 niapy/tests/test_aba.py)
        if [ $status -eq 1 ] || [ $status -eq 5 ]; then exit 0; else exit $status; fi
    - name: Store testmondata
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}_py${{ matrix.python-version }}
        path: config/testmondata/${{ matrix.os }}_py${{ matrix.python-version }}

  update_testdata:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: refs/heads/${{ github.head_ref }}
    - name: Fetch testmondata
      uses: actions/download-artifact@v2
      run: ls -R
        
  